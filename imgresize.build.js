/*
 * imgResize.js
 *
 * Copyright 2013, Simon Waldherr - http://simon.waldherr.eu/
 * Released under the MIT Licence
 * http://opensource.org/licenses/MIT
 *
 * Github:  https://github.com/SimonWaldherr/imgResize.js
 * Version: 0.0.5
 */

/*jslint browser: true*/
/*global Image*/
/*exported imgSmartResize*/

var boringLines,doColorBook,edgeDetect,edgeDetectLines,edgeDetection,imgSmartResize;edgeDetection=function(input,baseColor,grey,context,canvas){"use strict";var b,b1,b2,bc,bn,bp,bytesPerRow,centerRow,factor,g,g1,g2,gc,gn,gp,h,hm1,inputData,nextRow,output,outputData,pixel,priorRow,r,r1,r2,rc,rn,rp,w,wm1,x,y;output=context.createImageData(canvas.width,canvas.height);w=input.width;h=input.height;inputData=input.data;outputData=output.data;bytesPerRow=w*4;pixel=bytesPerRow+4;hm1=h-1;wm1=w-1;centerRow=void 0;priorRow=void 0;nextRow=void 0;factor=void 0;r1=void 0;g1=void 0;b1=void 0;rp=void 0;rc=void 0;rn=void 0;r2=void 0;gp=void 0;gc=void 0;gn=void 0;g2=void 0;bp=void 0;bc=void 0;bn=void 0;b2=void 0;r=void 0;g=void 0;b=void 0;x=void 0;y=void 0;y=1;while(y<hm1){centerRow=pixel-4;priorRow=centerRow-bytesPerRow;nextRow=centerRow+bytesPerRow;r1=-inputData[priorRow]-inputData[centerRow]-inputData[nextRow];g1=-inputData[priorRow+=1]-inputData[centerRow+=1]-inputData[nextRow+=1];b1=-inputData[priorRow+=1]-inputData[centerRow+=1]-inputData[nextRow+=1];rp=inputData[priorRow+=2];rc=inputData[centerRow+=2];rn=inputData[nextRow+=2];r2=-rp-rc-rn;gp=inputData[priorRow+=1];gc=inputData[centerRow+=1];gn=inputData[nextRow+=1];g2=-gp-gc-gn;bp=inputData[priorRow+=1];bc=inputData[centerRow+=1];bn=inputData[nextRow+=1];b2=-bp-bc-bn;x=1;while(x<wm1){centerRow=pixel+4;priorRow=centerRow-bytesPerRow;nextRow=centerRow+bytesPerRow;r=baseColor+r1-rp-(rc*-8)-rn;g=baseColor+g1-gp-(gc*-8)-gn;b=baseColor+b1-bp-(bc*-8)-bn;r1=r2;g1=g2;b1=b2;rp=inputData[priorRow];rc=inputData[centerRow];rn=inputData[nextRow];r2=-rp-rc-rn;gp=inputData[priorRow+=1];gc=inputData[centerRow+=1];gn=inputData[nextRow+=1];g2=-gp-gc-gn;bp=inputData[priorRow+=1];bc=inputData[centerRow+=1];bn=inputData[nextRow+=1];b2=-bp-bc-bn;if(!grey){outputData[pixel]=r+r2;outputData[pixel+=1]=g+g2;outputData[pixel+=1]=b+b2}else{factor=0.3*(r+r2)+0.59*(g+g2)+0.11*(b+b2);outputData[pixel]=factor;outputData[pixel+=1]=factor;outputData[pixel+=1]=factor}outputData[pixel+=1]=255;pixel+=1;x+=1}pixel+=8;y+=1}return output};doColorBook=function(input,cxt,canvas,mode){"use strict";var h,i,maxData,minData,newData,output,outputData,pixel,tempData,w,x,y;w=input.width;h=input.height;output=edgeDetection(input,255,1,cxt,canvas);outputData=output.data;newData=[];tempData=void 0;maxData=false;minData=false;pixel=0;y=void 0;x=void 0;i=void 0;y=0;while(y<h){x=0;while(x<w){if(mode==="h"){tempData=newData[y]}else{if(mode==="w"){tempData=newData[x]}}if(outputData[pixel]<240){if(tempData===undefined){if(mode==="h"){newData[y]=0}else{if(mode==="w"){newData[x]=0}}tempData=0}if(mode==="h"){newData[y]+=1}else{if(mode==="w"){newData[x]+=1}}tempData+=1}else{if(tempData===undefined){if(mode==="h"){newData[y]=0}else{if(mode==="w"){newData[x]=0}}tempData=0}}if((tempData<minData)||(!minData)){minData=tempData}if((tempData>maxData)||(!maxData)){maxData=tempData}pixel+=4;x+=1}y+=1}i=0;while(i<newData.length){newData[i]=parseInt((newData[i]-minData)/(maxData-minData)*255,10);i+=1}return newData};edgeDetect=function(options){"use strict";var edgeDetectLinesTemp,input,ocanvas,ocxt;ocanvas=(typeof options.ocanvas!=="string"?options.ocanvas:document.getElementById(options.ocanvas));ocxt=ocanvas.getContext("2d");input=ocxt.getImageData(0,0,ocanvas.width,ocanvas.height);edgeDetectLinesTemp=[];edgeDetectLinesTemp[0]=doColorBook(input,ocxt,ocanvas,"w");edgeDetectLinesTemp[1]=doColorBook(input,ocxt,ocanvas,"h");return edgeDetectLinesTemp};boringLines=function(linesArray,max){"use strict";var higharray,highest,i,newLinesArray;highest=void 0;newLinesArray=[];i=void 0;higharray=[];newLinesArray=linesArray.slice();max=(max===undefined?newLinesArray.length:(max>newLinesArray.length?newLinesArray.length:max));i=0;while(i<max){highest=newLinesArray.indexOf(Math.min.apply(window,newLinesArray));if(newLinesArray[highest]<255){newLinesArray[highest]=255;higharray[higharray.length]=highest}i+=1}return higharray};imgSmartResize=function(options){"use strict";var b,buf,buf8,canvas,cxt,data,edgeDetectLines,g,height,ignoreCols,ignoreRows,img,imgsrc,ocanvas,ocanvasheight,ocanvaswidth,ocxt,opixel,original,originalarray,outputData,outputarray,pixel,pixelid,r,starttime1,width,x,y;canvas=(typeof options.canvas!=="string"?options.canvas:document.getElementById(options.canvas));ocanvas=(typeof options.ocanvas!=="string"?options.ocanvas:document.getElementById(options.ocanvas));imgsrc=(options.img!==undefined?(typeof options.img!=="string"?options.img.src:options.img):canvas.getAttribute("data-src"));height=(options.height!==undefined?options.height:canvas.getAttribute("height"));width=(options.width!==undefined?options.width:canvas.getAttribute("width"));cxt=canvas.getContext("2d");ocxt=ocanvas.getContext("2d");ignoreRows=void 0;ignoreCols=void 0;pixel=0;opixel=0;img=void 0;x=void 0;y=void 0;original=ocxt.getImageData(0,0,ocanvas.getAttribute("width"),ocanvas.getAttribute("height"));outputData=cxt.createImageData(width,height);ocanvasheight=ocanvas.getAttribute("height");ocanvaswidth=ocanvas.getAttribute("width");pixelid=0;r=void 0;g=void 0;b=void 0;originalarray=original.data;outputarray=[];buf=new ArrayBuffer(width*height*4);buf8=new Uint8ClampedArray(buf);data=new Uint32Array(buf);if(edgeDetectLines===undefined){edgeDetectLines=edgeDetect(options)}else{if(edgeDetectLines.length===0){edgeDetectLines=edgeDetect(options)}}ignoreRows=boringLines(edgeDetectLines[1],ocanvas.getAttribute("height")-height);ignoreCols=boringLines(edgeDetectLines[0],ocanvas.getAttribute("width")-width);canvas.width=width;canvas.height=height;y=0;while(y<ocanvasheight){starttime1=new Date();x=0;while(x<ocanvaswidth){if((ignoreRows.indexOf(y)===-1)&&(ignoreCols.indexOf(x)===-1)){r=originalarray[opixel]&0xff;g=originalarray[++opixel]&0xff;b=originalarray[++opixel]&0xff;data[pixelid]=(255<<24)|(b<<16)|(g<<8)|r;++pixelid;opixel+=2}else{opixel+=4}++x}++y}outputData.data.set(buf8);img=new Image();img.src=imgsrc;return cxt.putImageData(outputData,0,0,0,0,width,height)};edgeDetectLines=[];
